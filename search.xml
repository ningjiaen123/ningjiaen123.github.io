<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>软件工程概述学习笔记01</title>
    <url>/2020/09/29/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A6%82%E8%BF%B0%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001/</url>
    <content><![CDATA[<h2 id="1-什么是软件危机？"><a href="#1-什么是软件危机？" class="headerlink" title="1.什么是软件危机？"></a>1.什么是软件危机？</h2><p>软件危机指的是落后的软件开发方式无法满足迅速发展的计算机需求。</p>
<h2 id="2-软件危机有哪些典型表现？"><a href="#2-软件危机有哪些典型表现？" class="headerlink" title="2.软件危机有哪些典型表现？"></a>2.软件危机有哪些典型表现？</h2><p>进度和成本预估不准确；<br/><br>软件质量达不到要求；<br/><br>软件的可维护性不好；<br/><br>通常没有完善的文档资料。</p>
<h2 id="3-软件危机出现的原因？"><a href="#3-软件危机出现的原因？" class="headerlink" title="3.软件危机出现的原因？"></a>3.软件危机出现的原因？</h2><p>软件的开发没有计划性；<br/><br>开发中的需求信息不充分；<br/><br>没有足够的评测手段；<br/><br>人力成本的不断上升；<br/><br>缺乏自动化技术。</p>
<h2 id="4-什么是软件工程？软件工程要解决的核心问题是什么？"><a href="#4-什么是软件工程？软件工程要解决的核心问题是什么？" class="headerlink" title="4.什么是软件工程？软件工程要解决的核心问题是什么？"></a>4.什么是软件工程？软件工程要解决的核心问题是什么？</h2><p>定义：软件的开发和维护。<br/><br>核心问题（目标）：用先进的软件开发技术和管理方法来提高软件的质量和生产效率。</p>
<h2 id="5-软件工程主要由哪些阶段组成？各个阶段的主要任务是什么？"><a href="#5-软件工程主要由哪些阶段组成？各个阶段的主要任务是什么？" class="headerlink" title="5.软件工程主要由哪些阶段组成？各个阶段的主要任务是什么？"></a>5.软件工程主要由哪些阶段组成？各个阶段的主要任务是什么？</h2><p>软件生存期一般由软件定义、软件开发、运行维护三个时期构成。<br/><br>其中每个时期又有不同的阶段。<br/><br>1)软件定义时期包括了问题定义、可行性研究、需求分析三个阶段<br/><br><b>问题定义和可行性研究：</b>分析到底需要解决什么问题，在成本和时间的限制下是否能解决问题？是否值得做？<br/><br><b>需求分析：</b>明确目标系统的功能性需求和非功能性需求，对系统进一步细化，了解系统的需求细节。<br/><br>2)软件开发时期包括了软件分析、编码、测试三个阶段<br/><br><b>软件分析：</b>制定设计方案，把各种需求转换成软件结构。<br/><br><b>编码和测试：</b>选择合适的语言将需求实现，并对每一个模块进行单元测试。<br/><br><b>集成测试和系统测试：</b>集成测试负责将各个模块拼接成一个系统后进行测试，检查模块连接中出现的问题。系统测试负责测试系统是否满足用户的需求。<br/><br>3)运行维护时期<br/><br><b>软件运行和维护：</b>将软件交付给用户实际使用，并修改使用中出现的错误。</p>
<h2 id="6-软件工程的三个基本要素是什么？各自的作用是什么？"><a href="#6-软件工程的三个基本要素是什么？各自的作用是什么？" class="headerlink" title="6.软件工程的三个基本要素是什么？各自的作用是什么？"></a>6.软件工程的三个基本要素是什么？各自的作用是什么？</h2><p>三要素：方法、工具、过程。<br/><br>方法：为建造软件过程中提供解决方法（如何做？）；<br/><br>工具：为方法的运用提供自动或半自动的软件支撑环境；<br/><br>过程：获得高质量软件所需要完成的一系列任务的框架。</p>
]]></content>
      <categories>
        <category>软件工程概述</category>
      </categories>
  </entry>
  <entry>
    <title>java web第一章学习总结</title>
    <url>/2020/09/28/Java-web%E7%AC%AC%E4%B8%80%E7%AB%A0%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="1-HTML基础"><a href="#1-HTML基础" class="headerlink" title="1.HTML基础"></a>1.HTML基础</h1><p>简介：<br/><br>html : Hyper Text Markup Language 超文本标记语言<br/><br>通过HTML标记对网页中的文本、图片、声音等内容加以描述</p>
<h2 id="1-1基本的html标签："><a href="#1-1基本的html标签：" class="headerlink" title="1.1基本的html标签："></a>1.1基本的html标签：<br/></h2><p>根标记:&lt;html&gt;&lt;/html&gt;<br/><br>头标记:&lt;head&gt;&lt;/head&gt;<br/><br>主体标记:&lt;body&gt;&lt;/body&gt;<br/><br>段落标记:&lt;p&gt;&lt;/p&gt;<br/><br>文本样式标记:&lt;font&gt;&lt;/font&gt;<br/><br>图像标记:&lt;img&amp;gt src=”图像URL”;<br/><br>表格标记: &lt;table&gt;  &lt;tr&gt;   &lt; td&gt; 单元格中的文字  &lt;/td&gt;   &lt;/tr&gt;    &lt;/table&gt;<br/><br>（即tr代表行，td代表列）<br/><br>表单标记:&lt; div&gt; &lt;/div&gt;<br/><br>(表单即在网页上输入数据的区域)<br/><br>行分隔线: &lt;hr/&gt;<br/><br>换行:&lt;br/&gt;<br/><br>注释:&lt;!– 注释内容–&gt;<br/><br>单行文本标签:&lt;text&gt; 显示在单行文本框中的内容&lt;/text&gt;<br/><br>文本域标签:&lt;textarea&gt; 显示在文本域中的内容&lt;/textarea&gt;<br/><br>超链接标签:&lt;a&gt; &lt;/a&gt;</p>
<h2 id="1-2基本的表单控件"><a href="#1-2基本的表单控件" class="headerlink" title="1.2基本的表单控件"></a>1.2基本的表单控件</h2><p>&lt;input type=”button” &gt;  代表创建一个按钮<br/><br><input type="button" width="100" height="40"> (一个按钮)<br/><br>&lt;input type=”text” &gt; 代表创建一个文本输入框<br/><br><input type="text" />( 一个文本输入框)<br/><br>&lt;input type=”checkbox” name=”interset” value=”film”/&gt;看电影<br/><br>&lt;input type=”checkbox” name=”interset” value=”game”/&gt; 打游戏<br/><br>&lt;input type=”checkbox” name=”interset” value=”basketball”&gt;打篮球(一个复选框)<br/><br><input type="checkbox" name="interset" value="film"/> 看电影<br><input type="checkbox" name="interset" value="game"/> 打游戏<br><input type="checkbox" name="interset" value="basketball"/> 打篮球</p>
<h2 id="1-3一个最基本的案例学习"><a href="#1-3一个最基本的案例学习" class="headerlink" title="1.3一个最基本的案例学习"></a>1.3一个最基本的案例学习</h2><!--代码展示start-->
<textarea style="min-height:500px;min-width:600px;max-height:500px;max-width:600px;">
<body>
<fieldset>
<legend align="center">注册为新用户</legend>
<form action="#" method="post">
<table cellpadding="2" align="center" >
<!--开始创建第一个input控件-->
<tr>
<td align="right"> 用户名</td>  
<td>
<!--文本输入框控件-->
<input type="text" name="username"/>
</td>
</tr>

<tr>
<td align="right"> 密码</td>  
<td>
<!--密码输入框控件-->
<input type="password" name="password"/>
</td>
</tr>

<tr>
<td align="right"> 性别</td>  
<td>
<!--单选框框控件-->
<input type="radio" name="sex" value="male"/> 男
<input type="radio" name="sex" value="female"/> 女
</td>
</tr>

<tr>
<td align="right"> 爱好</td>  
<td>
<!--复选框框控件-->
<input type="checkbox" name="interset" value="film"/> 看电影
<input type="checkbox" name="interset" value="game"/> 打游戏
<input type="checkbox" name="interset" value="basketball"/> 打篮球
</td>
</tr>

<tr>
<td align="right"> 头像</td>  
<td>
<!--文件上传控件-->
<input type="file" name="photo"/>
</td>
</tr>

<tr>
<td colspan="2" align="center"> 
<!--clospan规定表头单元格可横跨的列数-->
<!--提交按钮控件-->
<input type="submit" value="注册"/>
<!--重新填写按钮控件-->
<input type="reset" value="重填">
</td>
</tr>


</table>
</form>
</fieldset>
</body>
</textarea>
<!--代码展示end-->

<p>效果如下：</p>
<body>
<fieldset>
<legend align="center">注册为新用户</legend>
<form action="#" method="post">
<table cellpadding="2" align="center" >
<!--开始创建第一个input控件-->
<tr>
<td align="right"> 用户名</td>  
<td>
<!--文本输入框控件-->
<input type="text" name="username"/>
</td>
</tr>

<tr>
<td align="right"> 密码</td>  
<td>
<!--密码输入框控件-->
<input type="password" name="password"/>
</td>
</tr>

<tr>
<td align="right"> 性别</td>  
<td>
<!--单选框框控件-->
<input type="radio" name="sex" value="male"/> 男
<input type="radio" name="sex" value="female"/> 女
</td>
</tr>

<tr>
<td align="right"> 爱好</td>  
<td>
<!--复选框框控件-->
<input type="checkbox" name="interset" value="film"/> 看电影
<input type="checkbox" name="interset" value="game"/> 打游戏
<input type="checkbox" name="interset" value="basketball"/> 打篮球
</td>
</tr>

<tr>
<td align="right"> 头像</td>  
<td>
<!--文件上传控件-->
<input type="file" name="photo"/>
</td>
</tr>

<tr>
<td colspan="2" align="center"> 
<!--clospan规定表头单元格可横跨的列数-->
<!--提交按钮控件-->
<input type="submit" value="注册"/>
<!--重新填写按钮控件-->
<input type="reset" value="重填">
</td>
</tr>


</table>
</form>
</fieldset>
</body>
<hr/>

<h1 id="2-CSS基础"><a href="#2-CSS基础" class="headerlink" title="2.CSS基础"></a>2.CSS基础<br/></h1><h2 id="1-css的作用"><a href="#1-css的作用" class="headerlink" title="1. css的作用"></a>1. css的作用<br/></h2><p>1.美化界面，设置颜色、背景等。<br/><br>2.将样式和内容分离开来，提高了代码的可读性和可维护性。<br/></p>
<h2 id="2-css在html中的引用方式及基本格式"><a href="#2-css在html中的引用方式及基本格式" class="headerlink" title="2.css在html中的引用方式及基本格式"></a>2.css在html中的引用方式及基本格式<br/></h2><h3 id="1-内嵌式"><a href="#1-内嵌式" class="headerlink" title="1.内嵌式"></a>1.内嵌式<br/></h3><p>将css代码写在&lt;head&gt;头部标记之中。<br/><br>例如通过以下代码可以实现:<br><textarea style="min-height:200px;min-width:600px;max-height:200px;max-width:600px;"></p>
<head>
<style type="text/css">
div.red{
color:red;
}
</style>
<meta name="generator" content="Hexo 4.2.0"></head>
<body>
<div class="red">
我现在应该是红色的
</div>
</body>
</textarea>

<p>效果如下：</p>
<head>
<style type="text/css">
div.red{
color:red;
}
</style>
</head>
<body>
<div class="red">
我现在应该是红色的
</div>
</body>
这里还用了类选择器，即css代码中使用.red开头，控件属性中再定义class="red".<br/>
还可以使用id选择器例：<br/>
<!--代码展示start-->
<textarea style="min-height:200px;min-width:600px;max-height:200px;max-width:600px;">
<head>
<style type="text/css">
#mycolor{
color:blue;
}
</style>
</head>
<body>
<div id="mycolor">
我现在应该是蓝色的
</div>
</body>
</textarea>
<!--代码展示end-->
效果如下:
<head>
<style type="text/css">
#mycolor{
color:blue;
}
</style>
</head>
<body>
<div id="mycolor">
我现在应该是蓝色的
</div>
</body>

<h3 id="2-链入式"><a href="#2-链入式" class="headerlink" title="2.链入式"></a>2.链入式<br/></h3><p>外链式就是创建一个后缀为.css的文件，然后将上一段代码中的&lt;style&gt;&lt;/style&gt;中间的所有内容放入.css文件中。然后在html文件中将.css文件导入.<br/><br>语法：&lt;link type=”text/css” href=”.css文件的URL” rel=”stylesheet”&gt;<br/><br>这里的type代表链入是css文本，href代表文件的地址，rel设置对象和链接目的的关系<br/></p>
<p><b>rel各个属性值配置的意思：</b><br/><br>Alternate – 定义交替出现的链接<br/><br><font color="red">Stylesheet – 定义一个外部加载的样式表<br/></font><br>Start – 通知搜索引擎,文档的开始<br/><br>Next – 记录文档的下一页.(浏览器可以提前加载此页)<br/><br>Prev – 记录文档的上一页.(定义浏览器的后退键)<br/><br>Index – 当前文档的索引<br/><br>Glossary – 词汇<br/><br>Copyright – 当前文档的版权<br/><br>Chapter – 当前文档的章节<br/><br>Section – 作为文档的一部分<br/><br>Subsection – 作为文档的一小部分<br/><br>Appendix – 定义文档的附加信息<br/><br>Help – 链接帮助信息<br/><br>Bookmark – 书签</p>
<hr/>

<h1 id="3-Javascript基础"><a href="#3-Javascript基础" class="headerlink" title="3.Javascript基础"></a>3.Javascript基础</h1><h2 id="1-简介及作用"><a href="#1-简介及作用" class="headerlink" title="1.简介及作用"></a>1.简介及作用</h2><p>javascript是web中的一种脚本语言，直接放在html中即可使用，不需要编译，将单独由html制作的静态网页转变为动态网页，增强了与用户的交互性。</p>
<h2 id="2-引用方式"><a href="#2-引用方式" class="headerlink" title="2.引用方式"></a>2.引用方式</h2><h3 id="1-内嵌式-1"><a href="#1-内嵌式-1" class="headerlink" title="1.内嵌式"></a>1.内嵌式</h3><p>将javascript代码写在&lt;head&gt;中，具体格式如下：<br/><br><textarea style="min-height:200px;min-width:600px;max-height:200px;max-width:600px;"></p>
<head>
<title>内嵌式javascript</title>
<script type="text/javascript">
document.write("欢迎学习javascript");
</script>
</head>
</textarea>

<h3 id="2-外链式"><a href="#2-外链式" class="headerlink" title="2.外链式"></a>2.外链式<br/></h3><p>和css中的外链式一样，javascript中的外链式是先建立一个.js文件，然后在html中链入。如下：</p>
<p>&lt;head&gt;<br/><br>&lt;title&gt;外链式javascript&lt;/title&gt;<br/><br>&lt;script type=”text/javascript” src=”demo01.js”&gt;<br/><br>&lt;/script&gt;<br/><br>&lt;/head&gt;&gt;<br/></p>
<h2 id="3-一些语法区别"><a href="#3-一些语法区别" class="headerlink" title="3.一些语法区别"></a>3.一些语法区别<br/></h2><p>1.javascript是一种弱类型语言，无需像java 中那样指定定义类型，可以直接 var a=1;var b=”str”;这两种定义方式都是可以的。<br/><br>2.javascript中定义函数的关键字是 <b>function</b> 例如 function add(){函数体；}<br/><br>3.javascript中的局部变量：定义在函数以内的变量，只能被函数内调用。<br/><br>4.javascript中的全局变量：定义在函数体外的变量，在整个html界面都可以被调用。<br/><br>5.javascript中的判断语句、循环语句、运算符等语法和java都无差异。</p>
]]></content>
      <categories>
        <category>Java web</category>
      </categories>
  </entry>
  <entry>
    <title>Qt添加资源文件</title>
    <url>/2020/05/03/qt%E6%B7%BB%E5%8A%A0%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<hr>
<p>背景：做小项目的过程中经常会需要美化界面，这个时候就需要添加一些外部资源文件，记录一下。</p>
<h1 id="添加资源文件"><a href="#添加资源文件" class="headerlink" title="添加资源文件"></a>添加资源文件</h1><p>1.创建一个测试项目<br>如下：<img src="/img/QtForAddRes/TheFirstSence.png" width="60%" height="60%" alt="图片" align=center><br>2.选中项目，选择添加文件（add new），选择qt 列中的Qr resource file<br>如下：<br><img src="/img/QtForAddRes/TheSecondSence.png" width="60%" height="60%" alt="图片" align=center><br>3.建立的过程简单，起个名字就行，但这个时候有一点要注意，一定要添加前缀，也就是该资源在项目中文件夹名称。<br>如下：<br><img src="/img/QtForAddRes/TheThirdSence.png" width="60%" height="60%" alt="图片" align=center><br>至此建立资源文件夹就已经建立成功了，现在往文件夹中添加文件.</p>
<p>4.添加文件<br>一般选择将所需文件添加到对象的项目文件中，如下：<br><img src="/img/QtForAddRes/TheForthSence.png" width="60%" height="60%" alt="图片" align=center><br>回到qt，选择添加文件，点击添加后编译一下即可。<br><img src="/img/QtForAddRes/TheFifthSence.png" width="60%" height="60%" alt="图片" align=center><br>5.利用资源文件做一下小美化，比如把界面背景换一下。<br>未修改前的展示：<br><img src="/img/QtForAddRes/TheCommonSence.png" width="60%" height="60%" alt="图片" align=center><br>修改后的展示：<br><img src="/img/QtForAddRes/TheLastSence.png" width="90%" height="90%" alt="图片" align=center></p>
<h1 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h1><p>以防以后太久不用qt忘记了，顺便记录一下换背景的方法。<br>使用paintevent方法，<br>需要使用到的头文件：<br>#include&lt; QPainter &gt;<br>图示：<br><img src="/img/QtForAddRes/UsePaintevent_1.png" width="60%" height="60%" alt="图片" align=center></p>
<img src="/img/QtForAddRes/UsePaintevent_2.png" width="60%" height="60%" alt="图片" align=center>

<p>古德古德！！！</p>
<hr>
]]></content>
      <categories>
        <category>Qt</category>
      </categories>
  </entry>
  <entry>
    <title>数据库基本语法</title>
    <url>/2020/04/26/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<hr>
<h1 id="数据库基本语法："><a href="#数据库基本语法：" class="headerlink" title="数据库基本语法："></a>数据库基本语法：</h1><h2 id="建立与插入："><a href="#建立与插入：" class="headerlink" title="建立与插入："></a>建立与插入：</h2><h3 id="建立表："><a href="#建立表：" class="headerlink" title="建立表："></a>建立表：</h3><p>Create table &lt;表名&gt;（&lt;列名&gt;&lt;数据类型&gt;[列级完整性约束条件]，<br>&lt;列名&gt;&lt;数据类型&gt;[列级完整性约束条件]）；</p>
<h3 id="修改表："><a href="#修改表：" class="headerlink" title="修改表："></a>修改表：</h3><p>Alter table &lt;表名&gt;<br>[add &lt;新列名&gt; &lt;数据类型&gt; [完整性约束] ]<br>[add &lt;表级完整性约束&gt; ]<br>[drop &lt;列名&gt;  [restrict | cascade] ]<br>[drop constraint &lt;完整性约束名&gt; [restrict | cascade] ]<br>[alter column &lt;列名&gt;&lt;数据类型&gt; ]；</p>
<h3 id="删除表："><a href="#删除表：" class="headerlink" title="删除表："></a>删除表：</h3><p>Delete table &lt;表名&gt; [restrict | cascade]；<br>Restrict 表示限制性删除，cascade则是无限制删除。</p>
<h3 id="插入数据："><a href="#插入数据：" class="headerlink" title="插入数据："></a>插入数据：</h3><p>Insert into &lt;表名&gt; (属性列1，[属性列2]，…)<br>Values (常量1，[常量2],…)；</p>
<h3 id="修改数据："><a href="#修改数据：" class="headerlink" title="修改数据："></a>修改数据：</h3><p>Update &lt;表名&gt;<br>Set &lt;列名&gt;=&lt;表达式&gt;,[&lt;列名&gt;=&lt;表达式&gt;]…<br>[Where &lt;条件&gt;]；</p>
<h3 id="删除数据："><a href="#删除数据：" class="headerlink" title="删除数据："></a>删除数据：</h3><p>Delete<br>From &lt;表名&gt;<br>[where &lt;条件&gt;]；</p>
<h2 id="查询："><a href="#查询：" class="headerlink" title="查询："></a>查询：</h2><h3 id="查询数据："><a href="#查询数据：" class="headerlink" title="查询数据："></a>查询数据：</h3><p>Select [all | distinct] &lt;目标列&gt;，[&lt;目标列表达式&gt;…]<br>From &lt;表名1&gt;，[&lt;表名2&gt;]<br>[where &lt;条件表达式&gt;]<br>[group by &lt;列名&gt; having &lt;条件表达式&gt;]<br>[order by &lt;列名&gt; [asc | desc] ]</p>
<p>提示：select * 代表查询全部列。</p>
<h2 id="聚集函数："><a href="#聚集函数：" class="headerlink" title="聚集函数："></a>聚集函数：</h2><p>Count(*)  统计元组个数<br>Count([distinct | all] &lt;列名&gt;) 统计一列中值的个数<br>Avg([distinct | all] &lt;列名&gt;) 求一列值的平均值<br>Sum ([distinct | all] &lt;列名&gt;) 求一列值的总和<br>Max ([distinct | all] &lt;列名&gt;) 求一列值的最大值<br>Min ([distinct | all] &lt;列名&gt;) 求一列值的最小值<br>注意：聚集函数不能直接在Where语句中使用</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title>Qt中鼠标双击事件实现</title>
    <url>/2020/02/02/Qt%E4%B8%AD%E9%BC%A0%E6%A0%87%E5%8F%8C%E5%87%BB%E4%BA%8B%E4%BB%B6/</url>
    <content><![CDATA[<hr>
<p><strong>背景：</strong><br>在日常使用中经常会用到鼠标的双击事件，而Qt本身只提供了鼠标单击事件，在用到双击事件的场景中需要自己定义实现。<br><strong>思路：</strong><br>利用定时器来进行判断。设置一个定时器，当单击时就触发定时器，在一定时间内（由自己设定的定时器时间，双击一般为300ms）再次接受到单击信号则触发双击事件。<br><strong>代码实现：</strong><br>tips: 可以多加一个标志变量Is来判断；<br> QTimer *time=new QTimer;<br>            //当按下了鼠标左键<br>            connect(mine,&amp;Mine::pressLeft ,<a href="">=</a>{<br>                time-&gt;stop();<br>                time-&gt;start(400);<br>                Is++;<br>            });<br>            //判断是单击还是双击<br>            Eggs *e=new Eggs;<br>            connect(time,&amp;QTimer::timeout,<a href="">=</a><br>            {<br>                if(Is==1)<br>                {<br>                    //单击事件<br>                    time-&gt;stop();<br>                     Is=0;<br>                }<br>                if(Is==2)<br>                    {<br>                    //双击事件<br>                    time-&gt;stop();<br>                    Is=0;//记得重新置零<br>                }<br>            });</p>
<p>这里述标双击的对象是按钮，在其他控件的使用中思路也是一样的。</p>
]]></content>
      <categories>
        <category>Qt</category>
      </categories>
  </entry>
  <entry>
    <title>Qt创建无边界窗口</title>
    <url>/2020/02/02/qt%E4%B8%AD%E5%88%9B%E5%BB%BA%E6%97%A0%E8%BE%B9%E7%95%8C%E7%AA%97%E5%8F%A3/</url>
    <content><![CDATA[<hr>
<p>背景：在做一个ui界面的时候，为了让界面更加美观，想要隐藏掉窗口自带的标题栏，隐藏掉以后窗口就没有了默认的缩小、放大、关闭，一切的操作都由自己定义。在查阅了帮助文档和一些博客以后得到方法：</p>
<h2 id="使用setwindowflag函数"><a href="#使用setwindowflag函数" class="headerlink" title="使用setwindowflag函数"></a>使用setwindowflag函数</h2><p>void  setWindowFlags(Qt::WindowFlags type)<br>帮助文档中详细写到了对应参数的具体作用，这里只记录今天了解到的几个参数：<br>Qt::FramelessWindowHint<br>作用：产生一个无边界的窗口。 用户无法通过窗口系统移动或调整无边界窗口的大小。 </p>
<p>使用起来也很简单，直接在程序中加上一行代码即可：<br>this-&gt;setWindowFlags(Qt::FramelessWindowHint );</p>
<h1 id="一些其他的参数"><a href="#一些其他的参数" class="headerlink" title="一些其他的参数"></a>一些其他的参数</h1><p>Qt::WindowSystemMenuHint<br>作用：<br>添加一个窗口系统菜单，并可能添加一个关闭按钮。</p>
<p>Qt::WindowMinMaxButtonsHint<br>作用：添加一个最小化和最大化按钮。 在某些平台上，这意味着Qt :: WindowSystemMenuHint可以正常工作。</p>
]]></content>
      <categories>
        <category>Qt</category>
      </categories>
  </entry>
  <entry>
    <title>Qt可执行文件打包</title>
    <url>/2020/02/01/qt%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E6%89%93%E5%8C%85/</url>
    <content><![CDATA[<hr>
<p>说明：Qt平台生成的可执行文件在没有安装Qt的电脑上运行需要先进行配置才能使用，直接进入步骤。</p>
<h1 id="1-生成可执行文件（-exe）"><a href="#1-生成可执行文件（-exe）" class="headerlink" title="1.生成可执行文件（.exe）"></a>1.生成可执行文件（.exe）</h1><p>先在Qt中将模式设置为 release，再编译一下。如图：<br><img src="/img/Qt_release.png" width="60%" height="60%" alt="图片" align=center></p>
<p>在对应的release文件夹中找到.exe文件。（即你的项目文件目录）如图：<br><img src="/img/Findexe.png" width="60%" height="90%" alt="图片" align=center></p>
<h1 id="2-将可执行文件放入新建的文件夹中"><a href="#2-将可执行文件放入新建的文件夹中" class="headerlink" title="2.将可执行文件放入新建的文件夹中"></a>2.将可执行文件放入新建的文件夹中</h1><p>随意建立一个文件夹，将目标.exe文件复制到文件夹里。<br>例如建立一个 Minesweeper文件夹</p>
<h1 id="3-进行配置"><a href="#3-进行配置" class="headerlink" title="3.进行配置"></a>3.进行配置</h1><p>配置无非是将Qt中要求的文件放入建立的文件夹中一并打包发出，所以方法很多，最简单的是使用Qt自己提供的工具，一般工具会在安装目录中。例如如图：<br><img src="/img/FindQtTool.png" width="60%" height="60%" alt="图片" align=center><br>点开工具跳转到刚才建立的文件夹并输入指令：<br>如图：<br><img src="/img/Howtousetool.png" width="90%" height="90%" alt="图片" align=center><br>点击回车就会发现文件夹添加好了需要的文件，这个时候这个文件夹里的.exe文件就可以在没有安装Qt的电脑上直接运行了。<br><img src="/img/Thelastdisplay.png" width="60%" height="60%" alt="图片" align=center></p>
<h2 id="完工！！！"><a href="#完工！！！" class="headerlink" title="完工！！！"></a>完工！！！</h2>]]></content>
      <categories>
        <category>Qt</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/01/31/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
